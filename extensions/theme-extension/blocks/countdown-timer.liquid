<div id="countdown-container" style="display: grid; gap: 1rem; padding: 1rem;">
  <!-- Timers will be inserted here dynamically -->
</div>

<script>
  async function ajaxApi() {
    try {
      const response = await fetch('/apps/countdown');
      const data = await response.json();

      const container = document.getElementById('countdown-container');
      container.innerHTML = ''; // clear previous content

      if (!data?.timers || data.timers.length === 0) {
        container.innerHTML = '<p>No active timers found.</p>';
        return;
      }

      data.timers.forEach((timer, index) => {
        const now = new Date();
        const start = new Date(timer.startDate);
        const end = new Date(timer.endDate);

        // Create timer box
        const wrapper = document.createElement('div');
        wrapper.style = `
          border-radius: 8px;
          padding: 1rem;
          background: #f9f9f9;
          text-align: center;
          box-shadow: 0 4px 8px rgba(0,0,0,0.05);
          border-left: 6px solid ${timer.color || '#4f46e5'};
          position: relative;
          animation: ${timer.urgencyNotification === 'Color pulse' ? 'pulse 2s infinite' : 'none'};
        `;

        // Title
        const title = document.createElement('h2');
        title.textContent = timer.title || 'ðŸ”¥ Limited Time Offer';
        title.style = 'font-size: 1.5rem; margin-bottom: 0.25rem; color: #111;';
        wrapper.appendChild(title);

        // Description
        if (timer.description) {
          const desc = document.createElement('p');
          desc.textContent = timer.description;
          desc.style = 'font-size: 0.95rem; color: #555; margin-bottom: 0.5rem;';
          wrapper.appendChild(desc);
        }

        // Timer Message
        const timerText = document.createElement('div');
        timerText.id = `timer-text-${index}`;
        timerText.style = 'font-weight: bold; font-size: 1.2rem; color: #222;';
        wrapper.appendChild(timerText);

        container.appendChild(wrapper);

        // Handle logic
        if (now < start) {
          timerText.textContent = 'Coming Soon!';
        } else if (now >= end) {
          timerText.textContent = 'Offer Expired!';
        } else {
          const updateCountdown = () => {
            const now = new Date();
            const timeLeft = new Date(timer.endDate) - now;

            if (timeLeft <= 0) {
              clearInterval(interval);
              timerText.textContent = 'Offer Expired!';
              return;
            }

            const hours = Math.floor((timeLeft / (1000 * 60 * 60)) % 24);
            const minutes = Math.floor((timeLeft / (1000 * 60)) % 60);
            const seconds = Math.floor((timeLeft / 1000) % 60);

            timerText.textContent = `${hours}h ${minutes}m ${seconds}s`;
          };

          updateCountdown();
          const interval = setInterval(updateCountdown, 1000);
        }
      });
    } catch (error) {
      console.error('Countdown API Error:', error);
      document.getElementById('countdown-container').innerHTML = 'Error loading timer';
    }
  }

  ajaxApi();
</script>

<style>
  @keyframes pulse {
    0% { box-shadow: 0 0 0 0 rgba(255, 0, 0, 0.5); }
    70% { box-shadow: 0 0 0 10px rgba(255, 0, 0, 0); }
    100% { box-shadow: 0 0 0 0 rgba(255, 0, 0, 0); }
  }
</style>

{% schema %}
{
  "name": "Countdown Timer",
  "target": "section",
  "settings": []
}
{% endschema %}
